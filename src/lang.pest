alpha  = _{ 'a'..'z' | 'A'..'Z' }
digit  = _{ '0'..'9' }
ident  = { (alpha | digit) ~ (alpha | digit | "_" | "-" | "?")* }
number = { digit+ | ("-" ~ digit+) }
bool   = { "#" ~ ("t" | "f") }
or     = { "(" ~ "or" ~ " " ~ exp ~ " " ~ exp ~ ")" }
and    = { "(" ~ "and" ~ " " ~ exp ~ " " ~ exp ~ ")" }
if     = { "(" ~ "if" ~ " " ~ exp ~ " " ~ exp ~ " " ~ exp ~ ")" }
var    = { ident }
proc   = { "(" ~ "lambda" ~ " " ~ "(" ~ (" " ~ ident)* ~ ")" ~ " " ~ "(" ~ exp ~ ")" ~ ")" }
op     = { ident | "+" | "-" | ">" | "<" | "<=" | ">="}
app    = { "(" ~ op ~ (" " ~ exp)* ~ ")" }
let    = { "(" ~ "let" ~ " " ~ "(" ~ ("(" ~ ident ~ " " ~ exp ~ ")")* ~ ")" ~ " " ~ "(" ~ exp ~ ")" ~ ")" }
exp    = { bool | number | or | and | if | proc | app | var | let }